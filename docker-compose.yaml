version: "3.9"

volumes:
  postgre_data:
  static_volume:
  media_volume:
  certbot_www:
  certbot_conf:

services:
  web:
    image: bots_admin_web_image
    container_name: bots_admin_web
    build:
      context: ./
      dockerfile: ./docker/web/Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - .:/web/
      - static_volume:/web/static
      - media_volume:/web/media
    depends_on:
      - db

  bots:
    build:
      context: ./
      dockerfile: docker/bots/Dockerfile
    container_name: bots_webhook
    restart: always
    env_file:
      - .env
    depends_on:
      - db

  celery:
    image: bots_admin_web_image
    container_name: bots_admin_celery
    command: celery -A bots_factory worker -B -l INFO
    restart: always
    volumes:
      - .:/web
      - media_volume:/web/media
    env_file:
      - .env
    depends_on:
      - db
      - web
      - redis

  redis:
    image: redis:7.0.1-alpine
    container_name: bots_admin_redis
    restart: always

  db:
    image: postgres:15.2-alpine
    container_name: bots_admin_db
    restart: always
    volumes:
      - postgre_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"

  nginx:
    image: nginx:1.23.4-alpine
    container_name: bots_admin_nginx
    restart: always
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/web/static
      - media_volume:/web/media
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - bots

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
